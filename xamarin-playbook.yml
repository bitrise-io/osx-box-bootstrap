---
#
# Ansible playbook to prepare a Bitrise OS X VM/box, used through vagrant
#

- hosts: all
  # accelerate: true
  remote_user: vagrant
  vars:
    - ansible_sudo_pass: vagrant
    - param_user: vagrant
  tasks:
    #
    # Required param checks


    #
    # Setup profiles

    # The main Xamarin profile, includes
    #  the Xamarin specific environments
    - name: setup xamarin_profile
      copy: src=profiles/xamarin_profile
        dest="/Users/{{ param_user }}/.profiles/xamarin_profile"
        owner="{{ param_user }}"
        mode=0600

    # ------------------------------------------------------
    # --- Install Android SDKs and other build packages

    # Other tools and resources of Android SDK
    #  you should only install the packages you need!
    # To get a full list of available options you can use:
    #  android list sdk --no-ui --all --extended
    # (!!!) Only install one package at a time, as "echo y" will only work for one license!
    #       If you don't do it this way you might get "Unknown response" in the logs,
    #         but the android SDK tool **won't** fail, it'll just **NOT** install the package.
    - name: install platform-tools
      shell: echo y | android update sdk --no-ui --all --filter platform-tools | grep 'package installed'

    # SDKs
    # Please keep these in descending order!
    - name: install android-26
      shell: echo y | android update sdk --no-ui --all --filter android-26 | grep 'package installed'
    - name: install android-25
      shell: echo y | android update sdk --no-ui --all --filter android-25 | grep 'package installed'
    - name: install android-24
      shell: echo y | android update sdk --no-ui --all --filter android-24 | grep 'package installed'
    - name: install android-23
      shell: echo y | android update sdk --no-ui --all --filter android-23 | grep 'package installed'
    - name: install android-22
      shell: echo y | android update sdk --no-ui --all --filter android-22 | grep 'package installed'
    - name: install android-21
      shell: echo y | android update sdk --no-ui --all --filter android-21 | grep 'package installed'
    - name: install android-20
      shell: echo y | android update sdk --no-ui --all --filter android-20 | grep 'package installed'
    - name: install android-19
      shell: echo y | android update sdk --no-ui --all --filter android-19 | grep 'package installed'
    - name: install android-17
      shell: echo y | android update sdk --no-ui --all --filter android-17 | grep 'package installed'
    - name: install android-15
      shell: echo y | android update sdk --no-ui --all --filter android-15 | grep 'package installed'
    - name: install android-10
      shell: echo y | android update sdk --no-ui --all --filter android-10 | grep 'package installed'

    # build tools
    # Please keep these in descending order!
    - name: install build-tools-26.0.2
      shell: echo y | android update sdk --no-ui --all --filter build-tools-26.0.2 | grep 'package installed'
    - name: install build-tools-25.0.2
      shell: echo y | android update sdk --no-ui --all --filter build-tools-25.0.2 | grep 'package installed'
    - name: install build-tools-25.0.1
      shell: echo y | android update sdk --no-ui --all --filter build-tools-25.0.1 | grep 'package installed'
    - name: install build-tools-25.0.0
      shell: echo y | android update sdk --no-ui --all --filter build-tools-25.0.0 | grep 'package installed'
    - name: install build-tools-24.0.3
      shell: echo y | android update sdk --no-ui --all --filter build-tools-24.0.3 | grep 'package installed'
    - name: install build-tools-24.0.2
      shell: echo y | android update sdk --no-ui --all --filter build-tools-24.0.2 | grep 'package installed'
    - name: install build-tools-24.0.1
      shell: echo y | android update sdk --no-ui --all --filter build-tools-24.0.1 | grep 'package installed'
    - name: install build-tools-24.0.0
      shell: echo y | android update sdk --no-ui --all --filter build-tools-24.0.0 | grep 'package installed'
    - name: install build-tools-23.0.3
      shell: echo y | android update sdk --no-ui --all --filter build-tools-23.0.3 | grep 'package installed'
    - name: install build-tools-23.0.2
      shell: echo y | android update sdk --no-ui --all --filter build-tools-23.0.2 | grep 'package installed'
    - name: install build-tools-23.0.1
      shell: echo y | android update sdk --no-ui --all --filter build-tools-23.0.1 | grep 'package installed'
    - name: install build-tools-22.0.1
      shell: echo y | android update sdk --no-ui --all --filter build-tools-22.0.1 | grep 'package installed'
    - name: install build-tools-21.1.2
      shell: echo y | android update sdk --no-ui --all --filter build-tools-21.1.2 | grep 'package installed'
    - name: install build-tools-20.0.0
      shell: echo y | android update sdk --no-ui --all --filter build-tools-20.0.0 | grep 'package installed'
    - name: install build-tools-19.1.0
      shell: echo y | android update sdk --no-ui --all --filter build-tools-19.1.0 | grep 'package installed'
    - name: install build-tools-17.0.0
      shell: echo y | android update sdk --no-ui --all --filter build-tools-17.0.0 | grep 'package installed'

    # Android System Images, for emulators
    # Please keep these in descending order!
    - name: install sys-img-armeabi-v7a-android-
      shell: echo y | android update sdk --no-ui --all --filter sys-img-armeabi-v7a-android-24 | grep 'package installed'
    - name: install sys-img-armeabi-v7a-android-22
      shell: echo y | android update sdk --no-ui --all --filter sys-img-armeabi-v7a-android-22 | grep 'package installed'
    - name: install sys-img-armeabi-v7a-android-21
      shell: echo y | android update sdk --no-ui --all --filter sys-img-armeabi-v7a-android-21 | grep 'package installed'
    - name: install sys-img-armeabi-v7a-android-19
      shell: echo y | android update sdk --no-ui --all --filter sys-img-armeabi-v7a-android-19 | grep 'package installed'
    - name: install sys-img-armeabi-v7a-android-17
      shell: echo y | android update sdk --no-ui --all --filter sys-img-armeabi-v7a-android-17 | grep 'package installed'
    - name: install sys-img-armeabi-v7a-android-15
      shell: echo y | android update sdk --no-ui --all --filter sys-img-armeabi-v7a-android-15 | grep 'package installed'

    # Extras
    - name: install extra-android-m2repository
      shell: echo y | android update sdk --no-ui --all --filter extra-android-m2repository | grep 'package installed'
    - name: install extra-google-m2repository
      shell: echo y | android update sdk --no-ui --all --filter extra-google-m2repository | grep 'package installed'
    - name: install extra-google-google_play_services
      shell: echo y | android update sdk --no-ui --all --filter extra-google-google_play_services | grep 'package installed'

    # google apis
    # Please keep these in descending order!
    - name: install addon-google_apis-google-23
      shell: echo y | android update sdk --no-ui --all --filter addon-google_apis-google-23 | grep 'package installed'
    - name: install addon-google_apis-google-22
      shell: echo y | android update sdk --no-ui --all --filter addon-google_apis-google-22 | grep 'package installed'
    - name: install addon-google_apis-google-21
      shell: echo y | android update sdk --no-ui --all --filter addon-google_apis-google-21 | grep 'package installed'

    # Update the tools package
    - name: install tools package
      shell: echo y | android update sdk --no-ui --all --filter tools | grep 'package installed'

    #
    # Install debug.keystore
    # $HOME/.local/share/Xamarin/Mono for Android/debug.keystore
    - name: "ensure Xamarin debug.keystore dir exists"
      file: path="/Users/{{ param_user }}/.local/share/Xamarin/Mono for Android"
        state=directory
        owner="{{ param_user }}"
        mode=0755
    - name: install debug.keystore
      copy: src=xamarin/debug.keystore
        dest="/Users/{{ param_user }}/.local/share/Xamarin/Mono for Android/debug.keystore"
        owner="{{ param_user }}"
        mode=0644

    #
    # Setup Bitrise specific folders
    #
    # Setup the base folders / paths, referenced by ~/.profiles/xamarin_profile
    # These folders will be created in the HOME directory.
    - name: Create bitrise xamarin specific dirs
      file: path="/Users/{{ param_user }}/{{ item.fold_path }}"
        state=directory
        owner="{{ param_user }}"
      with_items:
        # Xamarin tools
        - { fold_path: 'bitrise/xamarin' }

    - name: sync xamarin tools from the provisioning repo
      synchronize: src=xamarin/ dest="/Users/{{ param_user }}/bitrise/xamarin/"

    # Final debug prints
    - debug: msg="---> Finished with automatic stuff - but here's some things you have to do manually:"
    - debug: msg=" (!) After you finished with the preparations RESTART the machine!"
    - debug: msg=" (!) Don't forget to remove the VM snapshots (if you used snapshots) before packaging!"
    - debug: msg="---> Finished"
