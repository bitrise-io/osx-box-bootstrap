---
# Java 8 install
# We need Java 8 because sdkmanager doesn't support newer Java versions (yet)
# Also we need to manually call launchctl because otherwise it breaks the brew uninstall task

- name: Check if Java's Helper-Tool is present
  shell: launchctl list | grep com.oracle.java.Helper-Tool > /dev/null 2>&1
  register: result
  ignore_errors: true
  no_log: true
- name: Display Java helper tools
  debug:
    msg: "com.oracle.java.Helper-Tool present {{ result.rc == 0 }}"

- name: Stop Java's Helper-Tool
  become: true
  shell: launchctl remove com.oracle.java.Helper-Tool
  ignore_errors: true
  when: result.rc == 0

- name: Check if Java's Java-Updater is present
  shell: launchctl list | grep com.oracle.java.Java-Updater > /dev/null 2>&1
  register: result
  ignore_errors: true
  no_log: true
- name: Display Java updater
  debug:
    msg: "com.oracle.java.Java-Updater present {{ result.rc == 0 }}"

- name: Stop Java's Java-Updater
  become: true
  shell: launchctl remove com.oracle.java.Java-Updater
  ignore_errors: true
  when: result.rc == 0

- name: brew uninstall latest java
  homebrew_cask:
    name: java
    state: absent

- name: brew untap homebrew/cask-versions if it is there
  homebrew_tap:
    name: homebrew/cask-versions
    state: absent

- name: Use our own version of cas-versions  # noqa 302
  shell: |
    mkdir -p `brew --repository`/bitrise-io
    git clone https://github.com/bitrise-io/homebrew-cask-versions ~/mirrors/github.com/bitrise-io/cask-versions
    git clone ~/mirrors/github.com/bitrise-io/cask-versions `brew --repository`/bitrise-io/cask-versions

- name: brew tap openjdk library
  homebrew_tap:
    name: AdoptOpenJDK/openjdk
    state: present

- name: brew cask install adoptopenjdk8
  homebrew_cask:
    name: adoptopenjdk/openjdk/adoptopenjdk8
    state: present

- name: brew cask install adoptopenjdk11
  homebrew_cask:
    name: adoptopenjdk11
    state: present

- name: Detect JAVA_HOME
  shell: /usr/libexec/java_home -v 1.8
  register: detect_java_home
  ignore_errors: true

...
