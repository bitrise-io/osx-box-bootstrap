---
- name: Check if Go is installed
  shell: /usr/local/go/bin/go version | awk '{print $3}'
  register: go_installation
  ignore_errors: true
  changed_when: false

- name: Clean up old version if necesary
  file:
    path: /usr/local/go
    state: absent
  become: true
  when: go_installation.stdout != go_version|string

- name: Download Go
  get_url:
    url: https://golang.org/dl/{{ go_version }}.{{ ansible_system | lower }}-amd64.tar.gz
    dest: /tmp/{{ go_version }}.zip
  when: >
    go_installation.rc != 0 or
    go_installation.stdout != go_version|string

- name: unarchive Go
  unarchive:
    src: /tmp/{{ go_version }}.zip
    dest: /usr/local/
    remote_src: true
    owner: "{{ param_user }}"
  become: true
  when: >
    go_installation.rc != 0 or
    go_installation.stdout != go_version|string

- name: prepare GOPATH dirs
  file:
    path: "{{ ansible_env.HOME }}/go/{{ item.fold_path }}"
    state: directory
    owner: "{{ param_user }}"
  with_items:
    - { fold_path: 'src' }
    - { fold_path: 'bin' }
    - { fold_path: 'pkg' }
...
